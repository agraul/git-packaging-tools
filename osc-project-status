#!/bin/bash

config="$HOME/.osc-project-statusrc"
if [ ! -f $config ]; then
    cat <<EOF >> $config
# Add your project=package configuration
# Example:
# obs_projects=(
#     some:project/packagename
#     some:another:project/anotherpackagename
#     and:so/on"
# )

obs_projects=()

EOF
fi

source $config

if [ "${#obs_projects[@]}" -eq "0" ]; then
    echo "Please add some projects into your configuration file at $config"
    exit 1;
fi

Y="\e[93m"
R="\e[31m"
G="\e[92m"
W="\e[97m"
D="\e[39m"

function get_patches_amount() {
    echo "$1" | grep 'patch$' | wc -l
}

function get_pkg_list() {
    project=$1
    package=$2
    echo "$(osc ls $project $package)"
}

function get_version() {
    project=$1
    package=$2
    echo "$(osc less $project/$package $package.spec | grep '^Version' | sed -e 's/.*\s//g')"
}

## Main
for items in ${obs_projects[@]}; do
    IFS=$'/' read -r repo pkg <<< "$items"
    pkg_list=$(get_pkg_list $repo $pkg)
    pkg_patches=$(get_patches_amount "$pkg_list")
    pkg_version=$(get_version $repo $pkg)
    IFS=" | " read -ra pkg_log_items <<< "$(osc log $repo/$pkg | head -2 | grep -ve '---')"


    if [ "$pkg_patches" -eq "0" ]; then
	VC=$G
    else
	VC=$R
    fi

    echo -e "$Y$repo/$pkg$D"
    printf "    Patches: $VC%s$D\n    Version: $W%s$D\n" $pkg_patches $pkg_version
    printf "   Revision: $W%s$D\nAccepted by: $W%s$D\nAccepted on: $W%s$D\n" \
	   ${pkg_log_items[0]} ${pkg_log_items[1]} "${pkg_log_items[2]} ${pkg_log_items[3]}"
done
